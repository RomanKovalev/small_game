{"version":3,"sources":["redux/actions.js","settings/settings.js","services/fetch-service.js","components/gamecontrol/gamecontrol.jsx","components/square/square.jsx","components/gamefield/gamefield.jsx","components/gameside/gameside.jsx","components/gametable/gametable.jsx","components/gamepage/gamepage.jsx","components/app/app.js","redux/reducer.js","redux/store.js","index.js"],"names":["addHumanSquare","square","type","payload","setResultTable","results","setShowed","showed","winners","FetchService","url","fetch","method","mode","cache","headers","res","ok","Error","status","winner","data","date","Date","slice","winnersURL","body","JSON","stringify","GameControl","fetchService","playClick","props","name","setMessage","addAISquare","setStatus","squareArray","gameConfig","field","i","push","timerId","setInterval","squaresHuman","length","clearInterval","sendData","then","response","json","resultTable","reverse","page","setButtonLabel","squaresAI","c","filter","x","includes","index","Math","floor","random","randomSquare","splice","setActive","a","delay","this","getData","setGameConfig","isDisabled","className","disabled","onChange","event","setMode","target","value","Object","entries","map","key","setName","placeholder","onClick","buttonLabel","Component","connect","state","dispatch","message","label","Square","style","backgroundColor","datatag","GameField","getColor","active","handleSquareClick","e","getAttribute","humanArray","parseInt","squares","width","GameSide","GameTable","changePage","setPage","content","item","nextDisabled","prevDisabled","GamePage","App","INITIAL_STATE","gameState","clicked","reducer","action","middleware","logger","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.821ee388.chunk.js","sourcesContent":["export const setGameConfig = gameConfig => ({\n    type: \"SET_GAME_CONFIG\",\n    payload: gameConfig\n})\nexport const setName = name => ({\n    type: \"SET_NAME\",\n    payload: name\n})\nexport const setMode = mode => ({\n    type: \"SET_MODE\",\n    payload: mode\n})\nexport const setMessage = message => ({\n    type: \"SET_MESSAGE\",\n    payload: message\n})\nexport const addAISquare = square => ({\n    type: \"ADD_AI_SQUARE\",\n    payload: square\n})\nexport const addHumanSquare = square => ({\n    type: \"ADD_HUMAN_SQUARE\",\n    payload: square\n})\nexport const setActive = square => ({\n    type: \"SET_ACTIVE\",\n    payload: square\n})\nexport const setStatus = status => ({\n    type: \"SET_STATUS\",\n    payload: status\n})\nexport const setResultTable = results => ({\n    type: \"SET_RESULT_TABLE\",\n    payload: results\n})\nexport const setShowed = showed => ({\n    type: \"SET_SHOWED\",\n    payload: showed\n})\nexport const setPage = page => ({\n    type: \"SET_PAGE\",\n    payload: page\n})\nexport const setButtonLabel = label => ({\n    type: \"SET_BUTTON_LABEL\",\n    payload: label\n})\n","export const settings = 'https://starnavi-frontend-test-task.herokuapp.com/game-settings'\nexport const winners = 'https://starnavi-frontend-test-task.herokuapp.com/winners'","import { winners  as winnersURL } from \"../settings/settings\";\n\nexport default class FetchService {\n\tasync getData(url) {\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'GET',\n\t\t\tmode: 'cors',\n\t\t\tcache: 'no-cache',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t});\n\t\tif (!res.ok) {\n\t\t\tthrow new Error(`Could not fetch ${url} received ${res.status}`);\n\t\t}\n\t\treturn await res;\n\t}\n\n\tasync sendData(winner) {\n\t    const data = {\n\t        date: Date().slice(0,21),\n\t        winner: winner\n\t    }\n\t    const res = await fetch(winnersURL, {\n\t        method: 'POST',\n\t        mode: 'cors',\n\t        cache: 'no-cache',\n\t        headers: {\n\t            'Content-Type': 'application/json',\n\t        },\n\t        body: JSON.stringify(data),\n\t\t});\n\t\tif (!res.ok) {\n\t\t\tthrow new Error(`Could not fetch ${winnersURL} received ${res.status}`);\n\t\t}\n\t    return await res;\n\t}\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n\tsetMode,\n\tsetName,\n\tsetGameConfig,\n\tsetMessage,\n\tsetActive,\n\taddHumanSquare,\n\taddAISquare,\n\tsetStatus,\n\tsetResultTable,\n\tsetShowed,\n\tsetButtonLabel,\n} from '../../redux/actions';\n\nimport { settings } from '../../settings/settings';\nimport FetchService from '../../services/fetch-service';\n\nimport './gamecontrol.styles.scss';\n\nclass GameControl extends Component {\n\tfetchService = new FetchService();\n\n\tcomponentDidMount() {\n\t\tthis.fetchService\n\t\t\t.getData(settings)\n\t\t\t.then(response => response.json())\n\t\t\t.then(gameConfig => this.props.setGameConfig(gameConfig));\n\t}\n\n\tplayClick = () => {\n\t\tif (this.props.name === '') {\n\t\t\tthis.props.setMessage('Enter your name');\n\t\t} else if (this.props.mode === '') {\n\t\t\tthis.props.setMessage('Choose game mode');\n\t\t} else {\n\t\t\tthis.props.setMessage('');\n\t\t\tthis.props.addAISquare([]);\n\t\t\tthis.props.addHumanSquare([]);\n\t\t\tthis.props.setStatus('playing');\n\t\t\tconst squareArray = [];\n\t\t\tconst square = this.props.gameConfig[this.props.mode] ? this.props.gameConfig[this.props.mode].field : 5;\n\t\t\tfor (let i = 0; i < square * square; i++) {\n\t\t\t\tsquareArray.push(i);\n\t\t\t}\n\t\t\tconst timerId = setInterval(() => {\n\t\t\t\tif (this.props.squaresHuman.length > (square * square) / 2) {\n\t\t\t\t\tthis.props.setMessage('Human won game!');\n\t\t\t\t\tclearInterval(timerId);\n\t\t\t\t\tthis.props.setStatus('');\n\t\t\t\t\tthis.fetchService\n\t\t\t\t\t\t.sendData(this.props.name)\n\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t.then(resultTable => this.props.setResultTable(resultTable.reverse()))\n\t\t\t\t\t\t.then(() =>\n\t\t\t\t\t\t\tthis.props.setShowed(\n\t\t\t\t\t\t\t\tthis.props.resultTable.slice(this.props.page * 4, this.props.page * 4 + 4)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tthis.props.setButtonLabel('Play Again');\n\t\t\t\t}\n\n\t\t\t\tif (this.props.squaresAI.length > (square * square) / 2) {\n\t\t\t\t\tthis.props.setMessage('AI won game!');\n\t\t\t\t\tclearInterval(timerId);\n\t\t\t\t\tthis.props.setStatus('');\n\t\t\t\t\tthis.fetchService\n\t\t\t\t\t\t.sendData('Computer AI')\n\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t.then(resultTable => this.props.setResultTable(resultTable.reverse()))\n\t\t\t\t\t\t.then(() =>\n\t\t\t\t\t\t\tthis.props.setShowed(\n\t\t\t\t\t\t\t\tthis.props.resultTable.slice(this.props.page * 4, this.props.page * 4 + 4)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tthis.props.setButtonLabel('Play Again');\n\t\t\t\t}\n\n\t\t\t\tif (this.props.status === 'playing') {\n\t\t\t\t\tconst squaresAI = this.props.squaresAI;\n\t\t\t\t\tconst squaresHuman = this.props.squaresHuman;\n\t\t\t\t\tconst c = squaresAI.filter(x => {\n\t\t\t\t\t\tif (!squaresHuman.includes(x)) {\n\t\t\t\t\t\t\treturn x;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.props.addAISquare(c);\n\n\t\t\t\t\tconst index = Math.floor(Math.random() * squareArray.length);\n\t\t\t\t\tconst randomSquare = squareArray.splice(index, 1);\n\t\t\t\t\tthis.props.setActive(randomSquare[0]);\n\t\t\t\t\tif (this.props.squaresHuman.includes(randomSquare[0]) !== true) {\n\t\t\t\t\t\tconst a = this.props.squaresAI;\n\t\t\t\t\t\ta.push(randomSquare[0]);\n\t\t\t\t\t\tthis.props.addAISquare(a);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this.props.gameConfig[this.props.mode].delay);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst isDisabled = () => this.props.status === 'playing';\n\n\t\treturn (\n\t\t\t<div className=\"game-control\">\n\t\t\t\t<select disabled={isDisabled()} onChange={event => this.props.setMode(event.target.value)}>\n\t\t\t\t\t<option>Pick game mode</option>\n\t\t\t\t\t{Object.entries(this.props.gameConfig).map(([key]) => (\n\t\t\t\t\t\t<option key={key}>{key}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t\t<input\n\t\t\t\t\tdisabled={isDisabled()}\n\t\t\t\t\tonChange={event => this.props.setName(event.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Enter your name\"\n\t\t\t\t/>\n\t\t\t\t<button disabled={isDisabled()} onClick={this.playClick}>\n\t\t\t\t\t{this.props.buttonLabel}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tgameConfig: state.gameConfig,\n\tname: state.name,\n\tmode: state.mode,\n\tstatus: state.status,\n\tsquaresAI: state.squaresAI,\n\tsquaresHuman: state.squaresHuman,\n\tresultTable: state.resultTable,\n\tpage: state.page,\n\tbuttonLabel: state.buttonLabel,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\tsetGameConfig: gameConfig => dispatch(setGameConfig(gameConfig)),\n\tsetName: name => dispatch(setName(name)),\n\tsetMode: mode => dispatch(setMode(mode)),\n\tsetStatus: status => dispatch(setStatus(status)),\n\tsetMessage: message => dispatch(setMessage(message)),\n\tsetActive: square => dispatch(setActive(square)),\n\taddAISquare: square => dispatch(addAISquare(square)),\n\taddHumanSquare: square => dispatch(addHumanSquare(square)),\n\tsetResultTable: resultTable => dispatch(setResultTable(resultTable)),\n\tsetShowed: resultTable => dispatch(setShowed(resultTable)),\n\tsetButtonLabel: label => dispatch(setButtonLabel(label)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameControl);\n","import React from 'react';\n\nimport './square.styles.scss';\n\nconst Square = (props) => (\n    <div className=\"square\" style={ {backgroundColor: props.status} } datatag={props.datatag}>\n    </div>\n)\n\nexport default Square;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { addHumanSquare } from \"../../redux/actions\";\nimport Square from \"../square/square\";\nimport './gamefield.styles.scss';\n\nclass GameField extends Component {\n\n    getColor = (index) => {\n        if (this.props.squaresHuman.includes(index) === true) {\n            return 'green'\n        }\n        if (this.props.squaresAI.includes(index) === true) {\n            return 'red'\n        }\n        if (this.props.active === index) {\n            return 'blue'\n        }\n    }\n\n    handleSquareClick = (e) => {\n        const square = e.target.getAttribute('datatag')\n        if (square == this.props.active) {\n            const humanArray = this.props.squaresHuman\n            humanArray.push(parseInt(square))\n            this.props.addHumanSquare(humanArray)\n        }\n    }\n\n    render() {\n        let squares = [];\n        const square = (this.props.gameConfig[this.props.mode]) ? this.props.gameConfig[this.props.mode].field : 5\n        for (let i = 0; i < square*square; i++) {\n            squares.push(<Square key={i} status={this.getColor(i)} datatag={i} />);\n        }\n        return (\n            <div className=\"gamefield\" onClick={this.handleSquareClick}>\n                <div className=\"message\">{this.props.message}</div>\n                <div className=\"game-square-wrapper\" style={{width: parseInt(square)*50+'px'}}>\n                    {squares}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    message: state.message,\n    gameConfig: state.gameConfig,\n    mode: state.mode,\n    active: state.active,\n    squaresAI: state.squaresAI,\n    squaresHuman: state.squaresHuman\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    addHumanSquare: square => dispatch(addHumanSquare(square)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameField)","import React from 'react';\n\nimport GameControl from \"../gamecontrol/gamecontrol\";\nimport GameField from \"../gamefield/gamefield\";\nimport './gameside.styles.scss';\n\nconst GameSide = () => (\n    <div className=\"game-side\">\n        <GameControl />\n        <GameField />\n    </div>\n)\n\nexport default GameSide;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setResultTable, setShowed, setPage } from '../../redux/actions';\nimport FetchService from '../../services/fetch-service';\nimport { winners } from \"../../settings/settings\";\n\nimport './gametable.styles.scss';\n\nclass GameTable extends Component {\n\n\tfetchService = new FetchService();\n\n\tcomponentDidMount() {\n\t\tthis.fetchService\n\t\t\t.getData(winners)\n\t\t\t.then(response => response.json())\n\t\t\t.then(resultTable => this.props.setResultTable(resultTable.reverse()))\n\t\t\t.then(() =>\n\t\t\t\tthis.props.setShowed(this.props.resultTable.slice(this.props.page * 4, this.props.page * 4 + 4))\n\t\t\t);\n\t}\n\n\tchangePage = x => {\n\t\tif (!(this.props.page === 0 && x < 0)) {\n\t\t\tthis.props.setPage(this.props.page + x);\n\t\t\tthis.props.setShowed(\n\t\t\t\tthis.props.resultTable.slice((this.props.page + x) * 4, (this.props.page + x) * 4 + 4)\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst content = this.props.showed.map((item, index) => (\n\t\t\t<tr key={index}>\n\t\t\t\t<td>{item.winner}</td>\n\t\t\t\t<td>{item.date}</td>\n\t\t\t</tr>\n\t\t));\n\n\t\treturn (\n\t\t\t<div className=\"game-table\">\n\t\t\t\t<div className=\"leaderboard\">Leaderboard</div>\n\t\t\t\t<div className=\"table\">\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tbody>{content}</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={() => this.changePage(-1)} disabled={this.props.page === 0}>\n\t\t\t\t\tPrev\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => this.changePage(1)}\n\t\t\t\t\tdisabled={this.props.showed.length < 4 && this.props.page !== 0}\n\t\t\t\t>\n\t\t\t\t\tNext\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tresultTable: state.resultTable,\n\tpage: state.page,\n\tshowed: state.showed,\n\tnextDisabled: state.nextDisabled,\n\tprevDisabled: state.prevDisabled,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\tsetResultTable: resultTable => dispatch(setResultTable(resultTable)),\n\tsetShowed: showed => dispatch(setShowed(showed)),\n\tsetPage: page => dispatch(setPage(page)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameTable);\n","import React from 'react';\n\nimport GameSide from '../gameside/gameside';\nimport GameTable from \"../gametable/gametable\"\n\nimport './gamepage.styles.scss';\n\nconst GamePage = () => (\n    <div className=\"gamepage\">\n        GamePage\n        <div className=\"gamepage-wrapper\">\n            <GameSide />\n            <GameTable />\n        </div>\n    </div>\n)\n\nexport default GamePage;","import React from 'react';\n\nimport GamePage from \"../gamepage/gamepage\";\n\nimport './app.scss';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <GamePage />\n    </div>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\n\tgameState: 'ready',\n\tgameConfig: {},\n\tname: '',\n\tmode: '',\n\tmessage: '',\n\tsquaresAI: [],\n\tsquaresHuman: [],\n\tactive: '',\n\tstatus: '',\n\tclicked: false,\n\tresultTable: [],\n\tpage: 0,\n\tshowed: [],\n\tbuttonLabel: 'Play',\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase 'SET_GAME_CONFIG':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgameConfig: action.payload,\n\t\t\t};\n\t\tcase 'SET_NAME':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tname: action.payload,\n\t\t\t};\n\t\tcase 'SET_MODE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmode: action.payload,\n\t\t\t};\n\t\tcase 'SET_MESSAGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessage: action.payload,\n\t\t\t};\n\t\tcase 'ADD_AI_SQUARE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsquaresAI: action.payload,\n\t\t\t};\n\t\tcase 'ADD_HUMAN_SQUARE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsquaresHuman: action.payload,\n\t\t\t};\n\t\tcase 'SET_ACTIVE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tactive: action.payload,\n\t\t\t};\n\t\tcase 'SET_STATUS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: action.payload,\n\t\t\t};\n\t\tcase 'SET_RESULT_TABLE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresultTable: action.payload,\n\t\t\t};\n\t\tcase 'SET_SHOWED':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tshowed: action.payload,\n\t\t\t};\n\t\tcase 'SET_PAGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpage: action.payload,\n\t\t\t};\n\t\tcase 'SET_BUTTON_LABEL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbuttonLabel: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { logger } from \"redux-logger\";\nimport reducer from \"./reducer\";\n\n\nconst middleware = [logger]\nconst store = createStore(reducer, applyMiddleware(...middleware))\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}